package org.translateToSql.management;

import org.translateToSql.visitors.translationVisitors.*;

/***
 * Serves as a central coordinator for managing different types of visitor objects, each specialized in traversing and
 * potentially translating specific parts of an SQL Abstract Syntax Tree (AST) generated by parsing SQL queries.
 * These visitor objects adhere to the Visitor design pattern.
 */
public class VisitorManager{

    private ToSqlExpressionVisitor expressionVisitor;
    private ToSqlSelectItemVisitor selectItemVisitor;
    private ToSqlSelectVisitor selectVisitor;
    private ToSqlFromItemVisitor fromItemVisitor;
    private ToSqlStatementVisitor statementVisitor;

    public VisitorManager(ToSqlExpressionVisitor expressionVisitor,
                          ToSqlSelectItemVisitor selectItemVisitor,
                          ToSqlSelectVisitor selectVisitor,
                          ToSqlFromItemVisitor fromItemVisitor,
                          ToSqlStatementVisitor statementVisitor){
        this.expressionVisitor = expressionVisitor;
        this.selectItemVisitor = selectItemVisitor;
        this.selectVisitor = selectVisitor;
        this.fromItemVisitor = fromItemVisitor;
        this.statementVisitor = statementVisitor;

    }

    public ToSqlExpressionVisitor getExpressionVisitor() {
        return expressionVisitor;
    }

    public void setExpressionVisitor(ToSqlExpressionVisitor expressionVisitor) {
        this.expressionVisitor = expressionVisitor;
    }

    public ToSqlSelectItemVisitor getSelectItemVisitor() {
        return this.selectItemVisitor;
    }

    public void setSelectItemVisitor(ToSqlSelectItemVisitor selectItemVisitor) {
        this.selectItemVisitor = selectItemVisitor;
    }

    public ToSqlSelectVisitor getSelectVisitor() {
        return this.selectVisitor;
    }

    public void setSelectVisitor(ToSqlSelectVisitor selectVisitor) {
        this.selectVisitor = selectVisitor;
    }

    public ToSqlFromItemVisitor getFromItemVisitor() {
        return this.fromItemVisitor;
    }

    public void setFromItemVisitor(ToSqlFromItemVisitor fromItemVisitor) {
        this.fromItemVisitor = fromItemVisitor;
    }

    public ToSqlStatementVisitor getStatementVisitor() {
        return this.statementVisitor;
    }

    public void setStatementVisitor(ToSqlStatementVisitor statementVisitor) {
        this.statementVisitor = statementVisitor;
    }
}
